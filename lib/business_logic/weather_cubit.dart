import 'package:bloc/bloc.dart';
import 'package:meta/meta.dart';
import '../data/models/data.dart';
import '../data/repository/weather_repo.dart';

part 'weather_state.dart';

class WeatherCubit extends Cubit<WeatherState> {
  final WeatherRepo weatherRepo;
  Autogenerated? weatherData;

  WeatherCubit(this.weatherRepo) : super(WeatherInitial());

  // Make the function async
  Future<void> getWeather(double lat, double lon) async {
    try {
      // Emit loading state
      emit(WeatherLoading());

      // Fetch the weather data from the repository
      weatherData = await weatherRepo.getWeather(lat, lon);

      if (weatherData != null) {
        // Emit loaded state with the fetched data
        emit(DataLoaded(weatherData!));
      } else {
        emit(WeatherError("Failed to load weather data"));
      }
    } catch (e) {
      // Handle any errors that occur during data fetching
      emit(WeatherError(e.toString()));
    }
  }
}
